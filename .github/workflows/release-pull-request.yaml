#
# DO NOT EDIT!
# This file was autogenerated by Carson.
# Changes may cause incorrect behavior and will be lost when the file is regenerated.
#
# Run `npx carson update workspace` to regenerate.
#

name: Release pull request

on:
  pull_request:
    branches:
      - development

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release_pull_request:
    name: Release pull request
    if: ${{ github.actor != 'renovate[bot]' && !contains(github.head_ref, 'renovate/') }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure git
        run: |
          git config user.email "bot@mazanec.dev"
          git config user.name "Bot"

      - uses: actions/setup-node@v4
        with:
          node-version: 24.6.0
          registry-url: 'https://registry.npmjs.org'

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - uses: geldata/setup-gel@v1
        with:
          server-version: none

      - name: Install packages
        run: npm ci

      - name: Check for changes
        run: |
          git config core.filemode false
          git_status=$(git status --porcelain)

          if [[ -n $git_status ]]; then
            echo "You have uncommitted changes!"
            git diff
            git config --unset core.filemode
            exit 1
          fi

          git config --unset core.filemode

      - name: Test
        run: npm test -- --filter=!dram

      - name: Test "dram"
        run: |
          npm run test -- --filter=dram
        env:
          GEL_INSTANCE: jakubmazanec/dram
          GEL_BRANCH: apps-${{ github.head_ref }}
          GEL_SECRET_KEY: ${{ secrets.JAKUBMAZANEC_DRAM_GEL_TOKEN }}

      - name: Check for changes
        run: |
          git config core.filemode false
          git_status=$(git status --porcelain)

          if [[ -n $git_status ]]; then
            echo "You have uncommitted changes!"
            git diff
            git config --unset core.filemode
            exit 1
          fi

          git config --unset core.filemode

      - name: Build packages
        run: npm run build -- --filter=!dram --filter=!headwind --filter=!riffle --filter=!somewhere

      - name: Authenticate to npm registry
        run: |
          echo "//registry.npmjs.com/:_authToken=NPM_TOKEN" > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Version packages
        run: |
          npx changeset version --snapshot unstable.$(git rev-parse --short HEAD) --snapshot-prerelease-template "{tag}"
          git status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish packages
        run: |
          npx changeset publish --tag unstable --no-git-tag
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: 'true' # must be string, not boolean

      - name: Deploy dram
        run: |
          npm run deploy --workspace dram -- --app dram-unstable --build-arg "VITE_APP_URL=$VITE_APP_URL" --build-arg "GEL_INSTANCE=$GEL_INSTANCE" --build-arg "GEL_BRANCH=$GEL_BRANCH" --build-secret "GEL_SECRET_KEY=$GEL_SECRET_KEY"
        env:
          VITE_APP_URL: https://dram-unstable.fly.dev
          GEL_INSTANCE: jakubmazanec/dram
          GEL_BRANCH: apps-${{ github.head_ref }}
          GEL_SECRET_KEY: ${{ secrets.JAKUBMAZANEC_DRAM_GEL_TOKEN }}
          FLY_ACCESS_TOKEN: ${{ secrets.FLY_TOKEN }}
          FLY_API_TOKEN: ${{ secrets.FLY_TOKEN }}

      - name: Deploy headwind
        run: |
          npm run deploy --workspace headwind -- --app headwind-unstable --build-arg "VITE_APP_URL=$VITE_APP_URL"
        env:
          VITE_APP_URL: https://headwind-unstable.fly.dev
          FLY_ACCESS_TOKEN: ${{ secrets.FLY_TOKEN }}
          FLY_API_TOKEN: ${{ secrets.FLY_TOKEN }}

      - name: Deploy riffle
        run: |
          npm run deploy --workspace riffle -- --app riffle-unstable --build-arg "VITE_APP_URL=$VITE_APP_URL"
        env:
          VITE_APP_URL: https://riffle-unstable.fly.dev
          FLY_ACCESS_TOKEN: ${{ secrets.FLY_TOKEN }}
          FLY_API_TOKEN: ${{ secrets.FLY_TOKEN }}

      - name: Deploy somewhere
        run: |
          npm run deploy --workspace somewhere -- --app somewhere-unstable --build-arg "VITE_APP_URL=$VITE_APP_URL"
        env:
          VITE_APP_URL: https://somewhere-unstable.fly.dev
          FLY_ACCESS_TOKEN: ${{ secrets.FLY_TOKEN }}
          FLY_API_TOKEN: ${{ secrets.FLY_TOKEN }}
